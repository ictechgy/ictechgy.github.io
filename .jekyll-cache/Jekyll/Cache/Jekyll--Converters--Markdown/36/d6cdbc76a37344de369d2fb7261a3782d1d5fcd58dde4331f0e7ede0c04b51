I"&<p>이 글을 읽기 전 <a href="https://eunjin3786.tistory.com/75">eungding님의 블로그</a>와 <a href="https://jcsoohwancho.github.io/2019-08-09-RxSwift%EA%B8%B0%EC%B4%88-Driver-&amp;-Signal/">Rhyno님의 블로그</a>글을 참고해보자.</p>

<p> </p>

<h1 id="signal과-driver">Signal과 Driver?</h1>
<p>Signal과 Driver는 메인쓰레드에서의 동작을 보장하고 error를 반환하지 않는다. 
그런데 나는 ‘error를 반환하지 않는다는 것’이 에러가 난 것에 대해 스트림 종료 방지를 해준다는 의미로 처음에 받아들였다. 그래서 특정 Observable 뒤에 asSignal이나 asDriver를 써주면 해당 Observable에서 error가 난다고 하더라도 전체적인 스트림은 종료가 되지 않을 것이라고 생각했다.</p>

<p>그래서 몇가지 테스트를 진행해보았다.</p>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">@IBOutlet</span> <span class="k">weak</span> <span class="k">var</span> <span class="nv">button</span><span class="p">:</span> <span class="kt">UIButton</span><span class="o">!</span>

<span class="k">let</span> <span class="nv">publishSubject</span><span class="p">:</span> <span class="kt">PublishSubject</span><span class="o">&lt;</span><span class="kt">Int</span><span class="o">&gt;</span> <span class="o">=</span> <span class="kt">PublishSubject</span><span class="p">()</span>
        
<span class="n">_</span> <span class="o">=</span> <span class="n">button</span><span class="o">.</span><span class="n">rx</span><span class="o">.</span><span class="n">tap</span>
		<span class="o">.</span><span class="nf">subscribe</span><span class="p">(</span><span class="nv">onNext</span><span class="p">:</span> <span class="p">{</span>
				<span class="n">publishSubject</span><span class="o">.</span><span class="nf">onError</span><span class="p">(</span><span class="kt">TestError</span><span class="o">.</span><span class="n">fakeError</span><span class="p">)</span>
		<span class="p">})</span>

<span class="n">_</span> <span class="o">=</span> <span class="n">publishSubject</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span><span class="s">"PublishSubject"</span><span class="p">)</span>
		<span class="o">.</span><span class="nf">asSignal</span><span class="p">(</span><span class="nv">onErrorJustReturn</span><span class="p">:</span> <span class="mi">0</span><span class="p">)</span><span class="o">.</span><span class="nf">debug</span><span class="p">(</span><span class="s">"Signal"</span><span class="p">)</span>
		<span class="o">.</span><span class="nf">emit</span><span class="p">()</span>
        <span class="c1">//과연 스트림은 끊기지 않고 계속 유지될까?</span>
</code></pre></div></div>
<p>버튼을 탭하는 경우 publishSubject로 error가 넘어가도록 했고 이를 미리 subscribe(emit)해준 스트림에서 받도록 세팅해두었다.
결과는 아래와 같았다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Signal -&gt; subscribed
PublishSubject -&gt; subscribed
PublishSubject -&gt; Event error(fakeError)
Signal -&gt; Event next(0)
Signal -&gt; Event completed
Signal -&gt; isDisposed
PublishSubject -&gt; isDisposed
</code></pre></div></div>
:ET