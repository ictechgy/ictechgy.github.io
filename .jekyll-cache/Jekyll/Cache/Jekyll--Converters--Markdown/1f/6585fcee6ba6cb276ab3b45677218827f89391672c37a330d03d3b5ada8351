I"o}<p>논리연산자
이전시간에 우리는 논리연산자 &amp;&amp;와 ||를 배웠다.
a &amp;&amp; b → a가 실행되면 b도 실행. a가 실행되지 않으면 b도 미실행
a || b → a가 실행되면 b는 미실행, a가 미실행되면 b는 실행</p>

<p>a | b   (연계)
→ a의 실행 결과 값을 b가 받아서 실행</p>

<p>ls /etc   → 목록이 많다
ls -l /etc  → 목록이 잘림. 제대로 전부를 못봄</p>

<p>그렇다고 more /etc는 불가능하다. /etc는 디렉토리라서</p>

<p>less /etc 로는 보는 것이 가능하다. more보다 향상된 명령어여서 폴더내부 파일을 볼 수도 있는 듯. 마치 ls -l /etc 을 쓴 듯이 나온다.</p>

<p>이럴 때 
ls -l /etc | more
결과값이 파이프라인 뒤로 넘어가면서 more가 받아서 출력한다.
출력되는 모양은 마치 less /etc와 비슷하다.</p>

<table>
  <tbody>
    <tr>
      <td>마찬가지로 ls -l /etc</td>
      <td>less 가능하긴 한데 그냥 less /etc 써도 된다.</td>
    </tr>
  </tbody>
</table>

<p>좋지 않은 예
more | ls -l /etc
이런건 되지 않는다.</p>

<p>넘겨줘봤자 ls가 못받아줌. 디렉토리의 목록을 보여주는 명령어이므로</p>

<p>결과값을 보면 ls -l /etc 따로, more 명령어 따로 논다.</p>

<p>활용예
ifconfig로 IP를 볼 때 우리가 필요한 것은 맨 위 두줄이다. 이 맨 위 두줄만 보겠다 할 때
ifconfig | head -2 또는 ifconfig | head -n2
이런식으로 사용가능</p>

<p>위와같이 ifconfig로 출력 될 것을 문서로서 인식되어 뒤에서 받는 듯하다. 그래서 뒤에서 head로 받아서 출력</p>

<p>파이프라인을 더 둠으로서 뒤에서 더 받도록도 가능하다
a | b | c 이런식으로.</p>

<table>
  <tbody>
    <tr>
      <td>ls -l /etc</td>
      <td>more</td>
      <td>nl</td>
    </tr>
  </tbody>
</table>

<p>조합에 따라 다양하게 사용 가능하다.</p>

<p>연산자. 기호를 써보자.
&lt; , &gt; , » 꺽쇠들.. redirection</p>

<p>첫번째</p>

<p>사용형식
명령어 &lt; 파일
→ 파일의 데이터를 명령어에 입력(표준 입력)</p>

<p>예를 들어
cat &lt; /etc/passwd 를 쓴다면
→ cat(명령어)를 실행하는데 /etc/passwd라는 파일이 입력의 대상이 됨</p>

<p>즉, cat /etc/passwd 를 그냥 쓴 것과 동일하다.</p>

<p>/etc/passwd 라는 파일을 cat이라는 명령어로 보낸 것. 명령어에 파일을 입력</p>

<p>두번째</p>

<p>사용형식
명령어 &gt; 파일
→ 명령어의 결과값을 파일에 저장함.
이 때, 파일에 내용이 이미 있었다면 그 내용은 사라지고 새롭게 저장이 됨.
잘못썼다가 큰일남.. 아무 내용도 없었다면 상관이 없지만</p>

<p>일단 pwd로 자신이 있는 경로 보고 혹시 /root라면 /home/itbank로 경로이동하자.
cd ~itbank 또는 cd /home/itbank 또는 cd ~i* 또는 cd ../home/itbank로 이동</p>

<p>헐 cd ~i* 이거 안되네. 풀네임 입력해야하네.
cd 또는 cd ~ 은 자신의 홈 디렉토리로 이동하는건데..</p>

<p>예를들어 cp /backup/inittab /home/itbank/test2</p>

<p>를 하고 ls -l 을 하여 용량을 확인해보면 용량이 있음
511용량을 가지고 있는 test2 파일</p>

<p>cat &gt; /home/itbank/test2
→ cat(명령어)의 실행 결과값을 inittab(파일)에 저장</p>

<p>입력하면 이제 아무것도 안뜨는데 그 의미는.. 이제 우리가 입력을 해서 파일에 저장시킬 내용을 작성하면 된다.</p>

<p>아무거나 입력하자.</p>

<p>다 작성하면..
Ctrl + D 안전한 종료
컨트롤 C는? 아니면 EOF 의미의 값을 입력하면? EOF는 -1 아니던가..흠</p>

<p>하니까 결과가 저장이 되서 용량이 달라짐. 이전에 있었던 내용이 사라짐</p>

<p>Ctrl + C 는 취소..인데. . cat &gt; test2 를 하고 아차 잘못입력했다 하고 Ctrl + C로 취소해도 용량은 0이 되어버림.
내용을 입력하다가 Ctrl + C하면? 용량은? 이미 입력한건 들어가나? 안들어가나? 들어가긴 하네. Ctrl + C 해도 저장은 됨.. 다만 불안전한 종료같은건가?</p>

<p>만약 입력하다가 그냥 putty꺼버린다면??</p>

<p>cat &gt; inittab 으로 그냥 하면 파일이 없었던 경우 생성됨 → 마치 touch같이</p>

<p>세번째</p>

<p>사용형식
명령어 &gt; 파일
→ 해당하는 파일이 존재하지 않는다면 파일을 생성</p>

<p>예를 들어
cat &gt; /home/itbank/inittab</p>

<p>inittab이라는 파일이 존재하지 않았지만 cat(명령어)의 실행결과 값이 저장되어 생성됨</p>

<p>touch도 파일을 생성할 수 있는데 &gt; 도 생성가능
근데 touch는 무조건 용량이 0으로 생성됨
&gt; 는 용량이 없게 만들 수도 있고 용량이 있게 만들 수도 있다.</p>

<p>근데 꼭 cat명령어만 써야하나? 다른거 써도 되지 않나?</p>

<p>네번째</p>

<p>사용형식
명령어 » 파일
→ 명령어 실행 결과값을 파일에 추가하겠다.</p>

<p>이 때, 파일에 내용이 이미 있었다면 기존의 내용은 보존되면서 이어서 추가된다.</p>

<p>파일에 내용이 없었다면 그냥 추가되는거고</p>

<p>1
2
3   → 여기까지가 기존의 내용이었다면
4   → 새로운 내용을 추가할 경우 여기서부터 추가됨
5
6</p>

<p>예를 들어
cat » /home/itbank/test2</p>

<p>cat(명령어)의 실행결과 값이 test2 파일에 추가</p>

<p>[root@localhost itbank]# cat &gt; test2
hello
hi
[root@localhost itbank]# cat &lt; test2
hello
hi
[root@localhost itbank]# cat » test2
bye
good bye
[root@localhost itbank]# cat &lt; test2
hello
hi
bye
good bye</p>

<p>« 를 쓰는건 없는건가..
앗 cat « test2를 했더니 뭔가 입력하는 것도 되고 해서 막 입력하고 Ctrl + D 눌러 안전한 종료 했더니 무슨 warning창 뜸. cat &lt; test2 했는데 변경된 것은 없음.. 뭐지?</p>

<p>다섯번째</p>

<p>파일의 내용 합치기
명령어 파일1 파일2 &gt; 파일3
→ 명령어를 이용하여 파일1과 파일2의 실행결과 값을 파일3에 저장</p>

<p>이 때, 파일3에 내용이 이미 있다면 사라지고 새롭게 저장</p>

<p>예를 들어
cat /home/itbank/inittab /home/itbank/test2 &gt; /home/itbank/testtest</p>

<p>해당 파일이 없었어서 새로 생성되면서 inittab파일의 내용과 test2파일의 내용이 합쳐서 만들어짐</p>

<p>만약 inittab과 test2의 위치를 바꾸면 작성되는 순서가 뒤바끼긴 함</p>

<p>근데 꺽쇠 오른쪽에 inittab을 다시 두거나 하면
inittab과 test2의 내용을 합쳐서 inittab에 다시 저장하는건가 → 안되네. 입력파일이 출력파일입니다. 하고서는 안되게 뜸..
→ cat inittab test2 &gt; inittab 입력함. 아예 작동이 안하는 것은 아니고 test2파일의 내용이 inittab의 내용이 됨.. 기존의 내용은 삭제됨</p>

<p>꺽쇠를 두번 » 쓰면 내용을 합쳐서 뒤에 추가시키겠지? → ㅇㅇ 그렇다.
cat inittab test2 » testtest 입력시 inittab의 내용과 test2의 내용이 합쳐져서 testtest파일의 내용 뒤에 추가가 된다.</p>

<p>cat inittab test2 » inittab     이렇게 하면 1과 2의 내용 합쳐서 1 작성되어있던거 뒤에 또 추가하는거겠네
내용 중복이 생기겠군 → 역시나 입력파일이 출력파일입니다 라는 경고문이 뜬다. cat inittab으로 내용을 확인해보면 cat test2 » inittab 을 한 결과가 출력된다.</p>

<p>즉 입력과 출력에 같은 파일명이 존재한다면 입력부분에서 해당 파일명을 제거하는 효과가 일어난다.</p>

<p>사실 cat같은거 쓰는건 연산자가 해주는 것이다? 안써도 쓴듯이?
cat inittab은 사실 cat &lt; inittab이 된거다? 
뭐 alias도 아니고.. alias는 명령어에 가칭, 별명 붙이는건데..</p>

<p>윈도우는 파일 찾기 쉬운데.. 리눅스는?</p>

<p>find
옵션을 두어서 찾는 조건을 둘 수 있고 그렇게 필터링조건을 둘 수록 찾는 속도가 빨라진다.</p>

<p>주어진 조건을 검색하여 이름을 찾는다.  → 윈도우는 확장자로 찾을수도 있는데 리눅스는?
*.exe같이.. 윈도우에서처럼 찾을 수 있나?</p>

<p>사용형식
find 경로  -name 찾을이름
→ 지정한 경로에서 이름을 검색</p>

<p>파일을 찾을수도 있고 디렉토리를 찾을수도 있다.</p>

<p>find / -name itbank
→ 최상위 하위 전부다 검색하기. 
→ 검색조건은 -name 이름으로 찾기? name값으로 검색하기? name을 출력하기??</p>

<p>찾을 때에는 프롬프트가 나올 때까지 기다리기. 찾는중임
도중에 뭐 누르면..? 
Ctrl + C 누르면 찾기 중단할 것 같고..</p>

<p>[root@localhost itbank]# find / -name itbank
/var/spool/mail/itbank
/home/itbank</p>

<p>→ /var/spool/mail/itbank 라는 것이 있구나. 디렉토리인가? 파일인가? 
이럴 때 -d 옵션을 쓰는 것임. 그냥 ls -l만 쓰면 저 이름을 가진 것이 파일이라면 상관이 없는데 만약 디렉토리라면 하위의 파일들을 출력할테니까</p>

<p>[root@localhost itbank]# ls -ld /var/spool/mail/itbank
-rw-rw—-. 1 itbank mail 0  9월 25  2017 /var/spool/mail/itbank</p>

<p>아 저거는 사용자 itbank의 메일파일이구나.</p>

<p>리눅스에서도 윈도우처럼 사용자 계정명으로 메일을 쓸 수 있는 시스템이 있다고 하심(?)</p>

<p>find 경로 -newer 찾을이름</p>

<p>find /home -newer testtest
→ 아무것도 안뜨네?</p>

<p>find /home -newer testfile1 하면 여러개 뜸</p>

<p>즉 -newer 옵션은.. 뒤에 쓰인 파일명 이후에 만들어진 파일을 출력함
근데 결과에 /home/itbank는 왜 나온거지?
→ 우리가 저 디렉토리에서 작업했으니 디렉토리의 수정변경일자가 바뀌어있음.
ls -ld /home/itbank쳐보면 앎</p>

<p>근데 내부에서 작업했어도 상위디렉토리도 똑같이 생성 또는 수정일이 바뀌는게 항상 일어나지는 않는 듯?<br />
[root@localhost itbank]# find /home -newer testtest
/home/itbank/inittab</p>

<p>→ testtest 파일이 생성되고 inittab 파일이 수정되었나본데 디렉토리자체에 대한 생성수정일은 바뀌지 않은듯.. 즉, 내부에 파일을 생성하거나 삭제한 경우에만 디렉토리 생성수정일도 바뀌는 것 같다. 내부파일의 뭐 내용을 수정한다고 하면 그건 해당 파일의 일시에만 영향을 줄 뿐 상위 디렉토리의 일시에 영향을 주지는 않는 듯 하다.</p>

<p>즉 뒤의 파일, 디렉토리 생성 수정일보다 뒤에 생성됐거나 수정된 것을 출력함(ls -l을 쳤을 시 나오는 일시 기준으로)</p>

<p>즉 지정한 경로에서 찾을이름 이후에 수정되거나 생성된 것(파일이나 디렉토리)을 찾음</p>

<p>ls -ld /home/itbank는 ls -ld 라고 그냥 쳐도 되네.
drwx——. 5 itbank itbank 266  5월 16 21:13 /home/itbank</p>

<p>drwx——. 5 itbank itbank 266  5월 16 21:13 .
또는 ls -ld .  이라고 입력해도 동일하게 나온다.</p>

<p>execute 옵션 추가하기</p>

<p>find 경로 -name 찾을이름 -exec 명령어(또는 명령어 [option]) {} \;
뒤의 {} \; 는 -exec때문에 오는 규칙</p>

<p>{}은 대입  → ??
\는 enter  → C언어에서 뭐 printf 안에서도 \n 을 보통 넣는 것처럼 이것도 그냥 넣는기호인건가.. 흠?
;는 끝났다 → C언어에서처럼 문장의 끝에 추가하는 기호</p>

<p>find . -name “test*” -exec rm {} \;
ls -l
현재 폴더 하위에서 test라는 단어로 시작하는 파일들이 싹다 제거됨</p>

<p>쌍따옴표를 하면 안의 내용을 포함하여..라는 의미를 가지게 됨. → ??
흠.. 그냥 test*라고 쓰면 안되나? → 이래도 작동은 하는데? ㄴㄴ 아니네 작동이 안되네.. 그냥 find 로 검색만 할 때는 쌍따옴표 추가 안해도 됐는데.. 무슨 그냥 구분자처럼 쓰는건가</p>

<p>여러가지 파일을 지울 수 있을까
find . -name “test<em>” “abcd</em>” -exec rm {} \; 이런식으로.. → 안된다. 아예 test파일도 제거가 안됨. abcd* 에 대한 path 경로얘기 나오는데..?</p>

<p>경로얘기가 나온데서 아래의 두 구문 추가적 실행해봄
find . -name “test<em>” . -name “abcd</em>” -exec rm {} \;
find . -name “test<em>” -name “abcd</em>” -exec rm {} \;
둘다 안된다.. test파일조차 제거 안됨. 흠.. 한번에 제거는 하나씩만 가능한건가</p>

<p>경로명 쪽에 .이라는 현재경로명을 안적을 수 있을까?
cp /home/1
그냥 이렇게 쓸 수 있나? 
→ 이렇게 쓰면 목적지 경로명을 안적었다고 나옴</p>

<p>근데 find -name “test*” -exec rm {} \; 로 find 명령어에서는 찾기 시작할 경로를 생략할 수 있다. 그리고 생략하면 온점을 쓴 것과 동일하며 현재 커맨드라인이 있는 위치 하위에서 파일을 찾겠다는 뜻이 된다. → -exec 추가옵션이 없어도 작동이 되는 방식이겠지</p>

<p>find . -name test  → 원래 쓰던 방식
find -name “test” → 경로도 생략하고 이름에도 따옴표 붙였는데 작동함..</p>

<p>이 OS에 서비스를 설치했는데 이용해보자</p>

<p>FTP서버를 설치해서 쓸 수 있도록 되어있음 → 기존에 쓰던 직접설치에는 서비스가 있지 않으며 리눅스2에 가면 FTP서버 설치법도 배울 것이다.</p>

<p>FTP(File Transfer Protocol)
파일(File)을 보내는(Transfer) 약속된 통신규약(Protocol)
→ 대표적인 파일 서비스 중에 하나이다. (다른 하나로는 공유폴더)</p>

<p>또다른 파일 서비스는 없나요..?</p>

<p>파일을 업로드하고 다운로드 할 수 있다.</p>

<p>윈도우의 cmd창에서 리눅스에 FTP접속 할 것
윈도우에서 서버에 접속하면 서버에 있는 상태인데 put을 이용해서 서버에 파일을 업로드하고 서버의 파일을 가지고 올 때 get을 이용해서 다운로드 할 것이다.</p>

<p>준비물
윈도우에 파일을 생성(학원에서는 inittab이라는 파일을 가지고 연습)
윈도우즈키 + r(실행) → cmd</p>

<p>선생님 공유폴더의 inittab을 내 개인폴더에 복사하자.</p>

<p>사용형식(ftp 접속 방법)
cmd창에서
ftp 접속할 IP주소</p>

<p>2) ftp(명령어)를 입력 후 enter → 명령모드로 진입 → open 접속할 IP주소</p>

<p>윈도우에 FTP관련 프로그램이 제대로 되어있어야 함..
혹시라도 위 작업을 할 경우
‘ftp은(는) 내부 또는 외부 명령, 실행할 수 있는 프로그램, 또는 배치 파일이 아닙니다’ 라는 에러메시지가 출력 될 경우 아래와 같이 작업하세요</p>

<p>Windows OS → 제어판 → 보기기준 : 범주 → 시스템 및 보안 → Windows 방화벽에서 프로그램(앱) 허용 → 설정변경 활성화 되었으면 누름 → 파일 전송 프로그램 항목이 있으면 체크 박스에 체크(3개 전부) → 확인</p>

<p>관리자로 로그인되어있으면 설정변경 버튼 비활성화되어있고 그냥도 설정변경 가능
일반사용자라면 설정변경버튼 클릭 필요</p>

<p>파일 전송 프로그램이 2개일 때, 둘 중에 하나는 반드시 제거 → 하나 남아있는 파일 전송 프로그램 체크 박스에 전부 체크 → 확인
그냥 2개면 2개 다 체크박스 6개 체크하면..?</p>

<p>파일 전송 프로그램이 아예 없으면 → 다른 프로그램(앱) 허용 → 찾아보기 → 경로는 C:\Windows\System32 → ftp.exe를 입력 후 열기 → 추가 → 파일 전송 프로그램 항목이 생기고 체크 박스 체크 안되어있으므로 전부 체크 → 확인</p>

<p>cmd를 열고 바로 ftp입력 ㄴㄴ
put할 파일이 D드라이브에 있다면 콘솔의 위치를 해당 위치로 바꾸자
만약 보내려는 파일은 D드라이브에 있는데 ftp가 실행된 위치가 C드라이브라면 아무리 put으로 파일을 보내려 해도 파일은 전송 할 수가 없다.. 파일을 못찾는 듯 하다.</p>

<p>→ 아마 ftp.exe도 시스템변수에 등록되어있어서 cmd상의 아무 경로상에서나 실행이 가능한 것 같다.. 그리고 ftp접속 후에 그냥 내 cmd 콘솔 커맨드라인 위치를 바꿀 수는 없나</p>

<p>그리구 보내려는 파일의 위치와 cmd 커맨드라인 경로의 드라이브 위치만 같다면 상세 경로는 다르다고 해도 put은 그냥도 가능한건가. 아니면 상세 경로까지 맞춰줘야하나.</p>

<p>get은 그냥 가져오는거니까 내 커맨드라인 위치에 받아질테니 상관없고..</p>

<p>드라이브 변경 → 드라이브명: 입력
cd 1_5* 입력 → 리눅스에서 배운 명령어와 비슷하네.. cmd 도스창도</p>

<p>또는 파일이 있는 폴더를 열고 주소를 복사해서 cd를 입력하고 붙여넣기 하면 됨(마우스 오른쪽 클릭하면 붙여넣기?) → 드라이브 변경까지 cd로 할 수 있나? 아니면 디렉토리만 바꿀 수 있는건가</p>

<p>dir을 입력해서 inittab이 있는지 확인 → 리눅스의 ls같은 명령어</p>

<p>이제 ftp입력. 엔터치고 open 리눅스IP입력
리눅스 IP확인은 putty 설정창에서 찾던지 열려있는 putty창에서 ifconfig | head -2 입력하든지 VMware에서 OS로 직접 들어가서 보던지</p>

<p>사용자 누구로 로그인할 것인지 뜬다.
아이디 itbank 비밀번호 itbank → 비밀번호 입력창에서는 내가 치는거 안뜸
→ 어? 근데 아이디 dust 아니었나.. 뭐 이름과 사용자계정명 그거 차이인가..
그리고 OS에서 root로 로그인했는데 putty에서 root로 또 로그인 가능한가? 또, putty로 root 로그인 했는데 ftp로 root 접속 가능한가.. 아니면 다른 사용자가 ftp를 root로 로그인했는데 또다른 사용자가 root로 ftp로그인 하려는건 안될테고.. 중복로그인 가능여부. OS putty ftp</p>

<p>cmd에서 ftp 접속 끊을때는 quit로.. cmd창 종료는 exit → logout같은 명령어 가능?</p>

<p>id를 잘못 입력하면.. 로그인하지 못했다는 명령어 등 뜸
로그인은 못했지만 리눅스 서버에 연결은 되어있는 상태 → 아무것도 안됨.. 뭐 어찌? 다시 open을 하면 이미 연결이 되어있다고 먼저 접속을 끊으라고 한다.. 물론 quit로 접속을 끊고 다시 접속해서 로그인 해도 되긴 하는데..
이럴 때 user 라는 명령어를 입력하여 재로그인 하자
admin이라는 명령어 치면..? ㅋㅋ 어드민 로그인 되나</p>

<p>로그인을 완료한 뒤..</p>

<p>pwd를 입력해서 리눅스 상에서 어디에 있는지 보자. 그래야 put으로 파일 올릴 때 어디에 파일이 올려졌는지 알 수 있다.
→ 이제 cmd 창에서 리눅스 명령어 칠 수 있는건가? 오오 ls같은 명령어 듣네.. dir 입력해도 작동함. ls -l 입력한 것과 동일하게 출력된다.
이제 cmd창은 리눅스 서버창이다.. put을 해서 윈도우의 파일을 서버에 올리고(서버로 가져오기)
get을 해서 윈도우에 파일을 보내자(서버에서 파일 보내기)
→ 이래서 선생님은 cmd창을 서버입장에서 설명하신 듯 하다. cmd창이 곧 터미널창처럼 되니까.. put과 get은 윈도우의 입장에서 이해되는 단어인데..</p>

<p>그럼 이제 이 상태에서는 리눅스상의 디렉토리 작업위치는 바꿀 수 있겠지만 윈도우상에서의 작업위치는 못바꾸는건가… quit하고 위치 바꾸고 다시 ftp 로그인해야하는건가.. 불편한데</p>

<p>put inittab을 하면 아까 커맨드라인이 있던 곳의 inittab을 put을 통해 서버의 /home/itbank 하위로 보내게 된다. → 이미 서버에 inittab이 있다면 안되니까 그전에 미리 rm 해놓자</p>

<p>커맨드라인위치와 서버상에서의 디렉토리경로는 항상 잘 확인해야한다.</p>

<p>이제 get써보자. 윈도우의 내 폴더에서 inittab을 삭제하자. 
get inittab
get cp_grub.cfg
를 하면 /home/itbank 하위의 해당파일을 내 커맨드라인 있었던 위치로 가져오게 됨. 다운로드</p>

<p>해당 파일이 있는 경로가 작업pwd 위치와 다르다면 경로명을 작성해주면 되나? → ㅇㅇ 된다.
get /etc/passwd 했는데 작동 한다.</p>

<p>다만 여전히 내 윈도우상에서의 위치는 묶여있다.. 못바꾸는건가</p>

<p>나는 그리고 방화벽허용쪽에 파일전송시스템항목 없었는데도 ftp 잘 되긴 하네..</p>

<p>putty에서 TUI 명령어
시스템 종료</p>

<p>shutdown -h now    → 시간설정을 두어 예약종료를 할 수도 있고,..
halt → 그만두다. 중지하다
poweroff
init 0  → 숫자 0        근데 init 은 시작관련 명령어? initiate</p>

<p>shutdown은 윈도우의 실행창? cmd창? 쪽에서도 작동하는 것 같던데</p>

<p>시스템 재부팅
shutdown -r now
reboot
init 6   → 0은 종료, 6은 재부팅을 의미한다.</p>

<p>원격으로 putty에서 키는건..흠 putty자체가 서버가 켜져있어야 접속이 가능하니..
리붓도 잠시 연결 끊겼다가 다시 접속해야할듯?
요즘에는 서버 시작도 되게 하는 원격프로그램 존재?</p>

<p>실습!
/down 디렉토리를 생성하시오
	mkdir /down
	ls -ld /down 또는 ls -l /down 으로 확인</p>

<p>아 그런데 mk 명령어도 있지 않았나??? 아닌가?? mk -r 로 디렉토리 생성?? → 있구만..</p>

<p>생성명령어에는 이 외에도 touch나 cat &gt; 이름</p>

<p>/down 디렉토리에 test1, test2 파일을 생성하시오
	cd /down
	touch test1 test2
→  touch test1 test2 /down 했더니 안됨.. 현재 위치에 test1과 test2가 만들어지고 /down은 아무것도 안된 것 같음</p>

<p>선생님은 touch /down/test1 /down/test2로 한번에 만드심</p>

<p>/down 디렉토리에 있는 test1, test2 파일을 각각 test3, test4 파일로 /tmp 디렉토리에 복사하시오
	cp test1 /tmp/test3
	cp test2 /tmp/test4</p>

<p>→ 선생님은 ls -l /tmp 으로 목적지 디렉토리가 있는지확인을 꼭 하라고 하심. 
그냥 cp /down/test1 /tmp로 하면 해당 디렉토리가 없을 경우 tmp라는 이름으로 복사-붙여넣기 될 수 있으므로.
물론 여기서는 cp /down/test1 /tmp/test3 으로 칠거니까 /tmp없으면 해당 디렉토리 없다고 뜨겠다만…</p>

<p>mkdir에서는 뭐 -p 옵션으로 디렉토리 한번에 쭉 만드는게 있었는데..
rmdir도 됐고</p>

<p>선생님 풀이
cp /down/test1 /tmp
rm -rf /tmp/test1    → 잘못해서 test1 이름으로 복사시켜서 삭제시키심</p>

<p>cp /down/test1 /tmp/test3
cp /down/test2 /tmp/test4
ls -l /tmp/test?  → 복사 잘 됐는지 확인</p>

<p>/down 디렉토리에 /test디렉토리를 생성하시오
	나는 cd로 /down하위로 이동했으므로
	mkdir test</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>선생님은.. 
mkdir /down/test
ls -l /down 또는 ls -ld /down/test
</code></pre></div></div>

<p>/down/test 디렉토리를 /tmp 디렉토리로 이동하시오
	나는 cd /down했으므로
	mv test /tmp</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>선생님 : /tmp디렉토리가 있는 것을 아므로..
mv /down/test /tmp
ls -l /down   → 폴더에서 사라졌는지
ls -ld /tmp/test → 이동 됐는지
</code></pre></div></div>

<p>find 명령어를 통해 파일명 앞부분에 “test”문자열이 섞인 파일을 검색하면서 삭제하시오(조건 : /tmp 디렉토리와 /down 디렉토리로만 부분검색을 하고 명령어 한 줄로)</p>

<p>별의 별 방법을 다 해봄</p>

<p>find /tmp /down -name “test*” -exec rm {} \;
→ test 디렉토리는 삭제 안되고 나머지 파일들은 삭제되는 것을 확인 할 수 있다.</p>

<p>-r을 추가하면 디렉토리까지 삭제하게 된다? 파일도 디렉토리도 모두 삭제?</p>

<p>→ 근데 test* 은 이름의 시작이 test이지 test가 섞인건 엄연히 아니지 않나.. 섞인거 따지려면 “<em>test</em>” 뭐 이런식으로 하면 되나</p>

<p>ls -l /down
ls -l /tmp/test?
ls -ld /tmp/test  → 디렉토리는 삭제되지 않은 상태</p>

<p>종료명령어로 원격 종료 시켜보자. 
원격으로 키는건.. 따로 프로그램이 있다고는 함. 재시작시키면 putty도 꺼질 때 연결 끊기니 다시 켜서 연결시켜야 할 듯
VMware에서 OS sleep모드인 상태에서 putty로 halt시키니까 제대로 종료가 안되는거같은데..?</p>

<p>-rw-r–r–. 1 root   root      0  5월 16 11:31 test1
-rw-r–r–. 1 root   root     22  5월 16 11:31 test2
-rw-r–r–. 1 root   root      0  5월 15 11:04 testfile1
-rw-r–r–. 1 root   root     36  5월 16 09:52 testtest
drwxr-xr-x. 2 itbank itbank    6  5월 16 11:06 공개
drwxr-xr-x. 2 itbank itbank    6  5월 16 11:06 다운로드
drwxr-xr-x. 2 itbank itbank    6  5월 16 11:06 문서
drwxr-xr-x. 2 itbank itbank    6  5월 16 11:06 바탕화면
drwxr-xr-x. 2 itbank itbank    6  5월 16 11:06 비디오
drwxr-xr-x. 2 itbank itbank    6  5월 16 11:06 사진
drwxr-xr-x. 2 itbank itbank    6  5월 16 11:06 서식
drwxr-xr-x. 2 itbank itbank    6  5월 16 11:06 음악</p>

<p>→ touch test1 test2 /down 했더니 현재디렉토리 하위에 생성됨.</p>

<p>[root@localhost itbank]# cd /down
[root@localhost down]# touch test1 test2
[root@localhost down]# ls -l
합계 0
-rw-r–r–. 1 root root 0  5월 16 11:31 test1
-rw-r–r–. 1 root root 0  5월 16 11:31 test2</p>

<p>[root@localhost down]# cp test1 /tmp/test3
[root@localhost down]# cp test2 /tmp/test4
[root@localhost down]# ls -l /tmp
-rw-r–r–. 1 root   root        0  5월 16 11:32 test3
-rw-r–r–. 1 root   root        0  5월 16 11:32 test4</p>

<p>[root@localhost down]# mkdir test
[root@localhost down]# ls -l
합계 0
drwxr-xr-x. 2 root root 6  5월 16 11:32 test
-rw-r–r–. 1 root root 0  5월 16 11:31 test1
-rw-r–r–. 1 root root 0  5월 16 11:31 test2</p>

<p>[root@localhost down]# mv test /tmp
[root@localhost down]# ls -l /tmp
drwxr-xr-x. 2 root   root        6  5월 16 11:32 test
-rw-r–r–. 1 root   root        0  5월 16 11:32 test3
-rw-r–r–. 1 root   root        0  5월 16 11:32 test4</p>

<p>[root@localhost down]# find /tmp -name “test<em>” | find /down -name “test</em>” -exec rm {} \;
[root@localhost down]# ls -l
합계 0
[root@localhost down]# ls -l /tmp
drwxr-xr-x. 2 root   root        6  5월 16 11:32 test
-rw-r–r–. 1 root   root        0  5월 16 11:32 test3
-rw-r–r–. 1 root   root        0  5월 16 11:32 test4</p>

<p>→ 뒤의 /down 디렉토리에 대한 삭제명령만 수행됨.. 앞에꺼 출력되긴 했었나?</p>

<p>[root@localhost down]# find /tmp&amp;&amp;/down -name “test*” -exec rm {} \;
이상한 쏼라문들~~
-bash: /down: 디렉터리입니다</p>

<p>→ find /tmp 실행되고 논리연산자 다음에 /down -name “test*” -exec rm {}\; 명령어 따로 본거같은데..</p>

<p>[root@localhost down]# find /tmp “test<em>” -exec rm {} \; &amp;&amp; find /down “test</em>” -exec rm {} \;
rm: cannot remove <code class="highlighter-rouge">/tmp': 디렉터리입니다
rm: cannot remove </code>/tmp/.font-unix’: 디렉터리입니다
rm: cannot remove <code class="highlighter-rouge">/tmp/.ICE-unix': 디렉터리입니다
rm: cannot remove </code>/tmp/.XIM-unix’: 디렉터리입니다
rm: cannot remove <code class="highlighter-rouge">/tmp/.X11-unix': 디렉터리입니다
rm: cannot remove </code>/tmp/.Test-unix’: 디렉터리입니다
rm: cannot remove <code class="highlighter-rouge">/tmp/ssh-0A7Lzw7GX7MB': 디렉터리입니다
rm: cannot remove </code>/tmp/.esd-1000’: 디렉터리입니다
rm: cannot remove <code class="highlighter-rouge">/tmp/test': 디렉터리입니다
rm: cannot remove </code>/tmp/.esd-0’: 디렉터리입니다
rm: cannot remove <code class="highlighter-rouge">/tmp/tracker-extract-files.0': 디렉터리입니다
rm: cannot remove </code>/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-vgauthd              .service-bdSMtk’: 디렉터리입니다
rm: cannot remove <code class="highlighter-rouge">/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-vgauthd              .service-bdSMtk/tmp': 디렉터리입니다
rm: cannot remove </code>/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-chronyd              .service-cmoezL’: 디렉터리입니다
rm: cannot remove <code class="highlighter-rouge">/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-chronyd              .service-cmoezL/tmp': 디렉터리입니다
rm: cannot remove </code>/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-vmtools              d.service-kjorGd’: 디렉터리입니다
rm: cannot remove <code class="highlighter-rouge">/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-vmtools              d.service-kjorGd/tmp': 디렉터리입니다
rm: cannot remove </code>/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-vmtools              d.service-kjorGd/tmp/vmware-root’: 디렉터리입니다
rm: cannot remove <code class="highlighter-rouge">/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-rtkit-d              aemon.service-5ZOWdG': 디렉터리입니다
rm: cannot remove </code>/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-rtkit-d              aemon.service-5ZOWdG/tmp’: 디렉터리입니다
rm: cannot remove <code class="highlighter-rouge">/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-cups.se              rvice-LvmSxJ': 디렉터리입니다
rm: cannot remove </code>/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-cups.se              rvice-LvmSxJ/tmp’: 디렉터리입니다
rm: cannot remove <code class="highlighter-rouge">/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-httpd.s              ervice-7PWJgb': 디렉터리입니다
rm: cannot remove </code>/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-httpd.s              ervice-7PWJgb/tmp’: 디렉터리입니다
rm: cannot remove <code class="highlighter-rouge">/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-colord.              service-bJumtV': 디렉터리입니다
rm: cannot remove </code>/tmp/systemd-private-20207bf1355843d3bbd13be310d0fb77-colord.              service-bJumtV/tmp’: 디렉터리입니다
rm: cannot remove `/tmp/tracker-extract-files.1000’: 디렉터리입니다
find: ‘test*’: 그런 파일이나 디렉터리가 없습니다</p>

<p>→ 이건 대체…</p>

<p>[root@localhost down]# ls -l
합계 0
[root@localhost down]# ls -l /tmp
합계 0
drwx——. 2 itbank itbank  6  5월 16 11:37 ssh-0A7Lzw7GX7MB
drwx——. 3 root   root   17  5월 16 09:16 systemd-private-20207bf1355843d3bbd13be310d0fb77-chronyd.service-cmoezL
drwx——. 3 root   root   17  5월 16 09:16 systemd-private-20207bf1355843d3bbd13be310d0fb77-colord.service-bJumtV
drwx——. 3 root   root   17  5월 16 09:16 systemd-private-20207bf1355843d3bbd13be310d0fb77-cups.service-LvmSxJ
drwx——. 3 root   root   17  5월 16 09:16 systemd-private-20207bf1355843d3bbd13be310d0fb77-httpd.service-7PWJgb
drwx——. 3 root   root   17  5월 16 09:16 systemd-private-20207bf1355843d3bbd13be310d0fb77-rtkit-daemon.service-5ZOWdG
drwx——. 3 root   root   17  5월 16 09:16 systemd-private-20207bf1355843d3bbd13be310d0fb77-vgauthd.service-bdSMtk
drwx——. 3 root   root   17  5월 16 09:16 systemd-private-20207bf1355843d3bbd13be310d0fb77-vmtoolsd.service-kjorGd
drwxr-xr-x. 2 root   root    6  5월 16 11:32 test
drwx——. 2 root   root    6  9월 25  2017 tracker-extract-files.0
drwx——. 2 itbank itbank  6  5월 16 11:31 tracker-extract-files.1000</p>

<p>/tmp 디렉토리가 날라가버린듯한 느낌… 뭐 임시파일저장하는 곳이라 상관은 없는데..</p>
:ET